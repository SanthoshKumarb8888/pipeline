name: CI Workflow

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code using actions/checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Run Tests with Maven
        run: mvn test

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=your_project_key
            -Dsonar.organization=your_organization
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate Check
        id: quality-gate
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.organization=your_organization \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          curl -s -u ${{ secrets.SONAR_TOKEN }}: \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=your_project_key" \
            | jq -r '.projectStatus.status' > quality_gate_status.txt

      - name: Upload SonarQube Report
        uses: actions/upload-artifact@v2
        with:
          name: sonar-report
          path: target/sonar/report-task.txt

      - name: Check Quality Gate Status
        id: check-status
        run: echo "Quality gate status is $(cat quality_gate_status.txt)"

      - name: Send Slack Notification on Failure
        if: steps.quality-gate.outputs.status != 'OK'
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          text: "Quality gate failed. Report: https://github.com/your_org/your_repo/actions/runs/${{ github.run_id }}/artifacts/sonar-report"

      - name: Build Docker Image
        run: docker build -t your_docker_image_name .

      - name: Publish Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push your_docker_image_name

      - name: Trigger CD Workflow
        uses: peter-evans/workflow-dispatch@v1
        with:
          workflow: cd.yml
          inputs:
            docker_image: your_docker_image_name:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
